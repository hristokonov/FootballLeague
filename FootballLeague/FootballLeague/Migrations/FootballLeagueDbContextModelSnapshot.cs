// <auto-generated />
using System;
using FootballLeague.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootballLeague.Migrations
{
    [DbContext(typeof(FootballLeagueDbContext))]
    partial class FootballLeagueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootballLeague.Data.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Euro League"
                        });
                });

            modelBuilder.Entity("FootballLeague.Data.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AwayTeamGoals")
                        .HasColumnType("int");

                    b.Property<int?>("AwayTeamId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamGoals")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsMatchPlayed")
                        .HasColumnType("bit");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("LeagueId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayTeamGoals = 2,
                            AwayTeamId = 2,
                            HomeTeamGoals = 3,
                            HomeTeamId = 1,
                            IsMatchPlayed = true,
                            LeagueId = 1
                        },
                        new
                        {
                            Id = 2,
                            AwayTeamGoals = 1,
                            AwayTeamId = 4,
                            HomeTeamGoals = 1,
                            HomeTeamId = 3,
                            IsMatchPlayed = true,
                            LeagueId = 1
                        },
                        new
                        {
                            Id = 3,
                            AwayTeamGoals = 1,
                            AwayTeamId = 3,
                            HomeTeamGoals = 4,
                            HomeTeamId = 1,
                            IsMatchPlayed = true,
                            LeagueId = 1
                        },
                        new
                        {
                            Id = 4,
                            AwayTeamGoals = 2,
                            AwayTeamId = 4,
                            HomeTeamGoals = 3,
                            HomeTeamId = 2,
                            IsMatchPlayed = true,
                            LeagueId = 1
                        },
                        new
                        {
                            Id = 5,
                            AwayTeamGoals = 1,
                            AwayTeamId = 4,
                            HomeTeamGoals = 2,
                            HomeTeamId = 1,
                            IsMatchPlayed = true,
                            LeagueId = 1
                        },
                        new
                        {
                            Id = 6,
                            AwayTeamGoals = 0,
                            AwayTeamId = 3,
                            HomeTeamGoals = 3,
                            HomeTeamId = 2,
                            IsMatchPlayed = true,
                            LeagueId = 1
                        });
                });

            modelBuilder.Entity("FootballLeague.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoalsConceded")
                        .HasColumnType("int");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("int");

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GoalsConceded = 4,
                            GoalsScored = 9,
                            LeagueId = 1,
                            Name = "Real Madrid",
                            Points = 9
                        },
                        new
                        {
                            Id = 2,
                            GoalsConceded = 5,
                            GoalsScored = 8,
                            LeagueId = 1,
                            Name = "PSG",
                            Points = 6
                        },
                        new
                        {
                            Id = 3,
                            GoalsConceded = 8,
                            GoalsScored = 2,
                            LeagueId = 1,
                            Name = "Barcelona",
                            Points = 1
                        },
                        new
                        {
                            Id = 4,
                            GoalsConceded = 6,
                            GoalsScored = 4,
                            LeagueId = 1,
                            Name = "Arsenal",
                            Points = 1
                        });
                });

            modelBuilder.Entity("FootballLeague.Data.Models.Match", b =>
                {
                    b.HasOne("FootballLeague.Data.Models.Team", "AwayTeam")
                        .WithMany("AwayMatches")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballLeague.Data.Models.Team", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballLeague.Data.Models.League", "League")
                        .WithMany("Matches")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FootballLeague.Data.Models.Team", b =>
                {
                    b.HasOne("FootballLeague.Data.Models.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId");
                });
#pragma warning restore 612, 618
        }
    }
}
